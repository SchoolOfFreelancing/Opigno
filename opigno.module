<?php

/**
 * @file
 * Contains all hook_implementations.
 */

/**
 * @todo
 *  - Add new permission + callback for views pages
 *  - Add views to install (Features ?)
 */
 
/**
 * Implements hook_menu_alter()
 */
function opigno_menu_alter(&$items) {
  
}

/**
 * Implements hook_block_info()
 */
function opigno_block_info() {
  return array(
    'course_tools' => array(
      'info' => t("Opigno: Course tools"),
      'cache' => DRUPAL_CACHE_PER_PAGE
    ),
    'add_course_content' => array(
      'info' => t("Opigno: Add course content"),
      'cache' => DRUPAL_CACHE_PRE_USER
    )
  );
}

/**
 * Implements hook_block_view()
 */
function opigno_block_view($delta) {
  module_load_include('inc', 'opigno', 'includes/opigno.block');
  
  switch ($delta) {
    case 'course_tools':
      return opigno_course_tools_block();
    
    case 'add_course_content':
      return opigno_course_add_content_block();
  }
}

/**
 * Implements hook_theme()
 */
function opigno_theme() {
  return array(
    'opigno_og_tool' => array(
      'variables' => array('og_type' => NULL, 'machine_name' => NULL, 'name' => NULL, 'url' => NULL),
      'template' => 'theme/opigno--og-tool'
    )
  );
}

/**
 * Implements hook_opigno_course_tools()
 */
function opigno_opigno_course_tools($node) {
  // @todo - activate/deactivate certain tools ?
  
  return array(
    'wikis' => array(
      'tool_name' => t("Wikis"),
      'tool_url' => url("node/{$node->nid}/wikis"),
      'item_name' => t("Wiki"),
      'create_url' => url("node/add/wiki", array('query' => array('gids_node[]' => $node->nid)))
    ),
    'quizzes' => array(
      'tool_name' => t("Quizzes"),
      'tool_url' => url("node/{$node->nid}/quizzes"),
      'item_name' => t("Quiz"),
      'create_url' => url("node/add/quiz", array('query' => array('gids_node[]' => $node->nid)))
    ),
    'calendar' => array(
      'tool_name' => t("Calendar"),
      'tool_url' => url("node/{$node->nid}/calendar"),
      'item_name' => t("Calendar entry"),
      'create_url' => url("node/add/calendar_entry", array('query' => array('gids_node[]' => $node->nid)))
    )
  );
}

/**
 * Custom title callback.
 * Generates a title based on the node title and page type.
 * 
 * @param object $node
 * 
 * @param string $type
 *        The page type. Can be 'wiki', 'quiz', 'workgroup', etc
 * 
 * @return string
 */
function opigno_node_title($node, $type) {
  $node_title = $node->title;
  
  switch($type) {
    case 'wiki':
      $objects = t("wikis");
      break;
      
    case 'files':
      $objects = t("documents");
      break;
      
    case 'quiz':
      $objects = t("assessments");
      break;
      
    default:
      $objects = t("content");
      break;
  }
  
  return t("@title !objects", array('@title' => $title, '!objects' => $objects));
}

/**
 * Custom access callback
 * Use the settings from og_access to determine if a user has access to the current
 * node.
 *
 * @param object $node
 *
 * @param string $type
 *        The page type. Can be 'wiki', 'quiz', 'workgroup', etc
 *
 * @return bool
 */
function opigno_node_access($node, $type) {
  return TRUE;
}
