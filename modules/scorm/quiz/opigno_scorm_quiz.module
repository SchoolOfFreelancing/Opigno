<?php

/**
 * @file
 * Module hook definitions.
 */

/**
 * Implements hook_opigno_scorm_ui_register_cmi_paths().
 */
function opigno_scorm_quiz_opigno_scorm_ui_register_cmi_paths() {
  return array(
    'cmi.location',
    'cmi.objectives',
    'cmi.objectives._count',
    'cmi.objectives._children',
    'cmi.objectives.n.id',
    'cmi.objectives.n.score',
    'cmi.objectives.n.score._children',
    'cmi.objectives.n.success_status',
    'cmi.objectives.n.completion_status',
    'cmi.objectives.n.progress_measure',
    'cmi.objectives.n.description',
  );
}

/**
 * Implements hook_opigno_scorm_ui_register_cmi_data().
 */
function opigno_scorm_quiz_opigno_scorm_ui_register_cmi_data($scorm, $scos) {
  global $user;

  $data = array(
    'cmi.location' => opigno_scorm_quiz_scorm_cmi_get($user->uid, $scorm->id, 'cmi.location', 0),
    'cmi.objectives' => array(),
  );

  // Fetch the objectives.
  foreach ($scos as $sco) {
    if (!empty($sco->attributes['objectives'])) {
      foreach ($sco->attributes['objectives'] as $objective) {
        $data['cmi.objectives'][] = array(
          'id' => $objective['id'],
          'score' => array(
            'scaled' => 0,
            'raw' => 0,
            'min' => 0,
            'max' => 0,
          ),
          'success_status' => '',
          'completion_status' => '',
          'progress_measure' => '',
          'description' => '',
        );
      }
    }
  }

  return $data;
}

/**
 * Implements hook_opigno_scorm_ui_add_assets().
 */
function opigno_scorm_quiz_opigno_scorm_ui_add_assets() {
  $path = drupal_get_path('module', 'opigno_scorm_quiz');
  drupal_add_js("$path/js/opigno_scorm_quiz.js");
}

/**
 * Implements hook_opigno_scorm_ui_commit().
 */
function opigno_scorm_quiz_opigno_scorm_ui_commit($scorm, $data) {
  global $user;

  // Store the last position.
  if (!empty($data['cmi']['location'])) {
    opigno_scorm_scorm_cmi_set($user->uid, $scorm->id, 'cmi.location', $data['cmi']['location']);
  }
}

/**
 * Helper function to get SCORM CMI data while also providing a default value.
 *
 * @param int $uid
 * @param int $scorm_id
 * @param string $cmi_key
 * @param mixed $default_value
 *
 * @return mixed|null
 */
function opigno_scorm_quiz_scorm_cmi_get($uid, $scorm_id, $cmi_key, $default_value = NULL) {
  $value = opigno_scorm_scorm_cmi_get($uid, $scorm_id, $cmi_key);
  return isset($value) ? $value : $default_value;
}

/**
 * Helper function to get SCO CMI data while also providing a default value.
 *
 * @param int $uid
 * @param int $scorm_id
 * @param string $cmi_key
 * @param mixed $default_value
 *
 * @return mixed|null
 */
function opigno_scorm_quiz_sco_cmi_get($uid, $scorm_id, $cmi_key, $default_value = NULL) {
  $value = opigno_scorm_sco_cmi_get($uid, $scorm_id, $cmi_key);
  return isset($value) ? $value : $default_value;
}
